const f=function(){const o=typeof document<"u"&&document.createElement("link").relList;return o&&o.supports&&o.supports("modulepreload")?"modulepreload":"preload"}(),p=function(i){return"/notion-icons/"+i},u={},E=function(o,l,h){let c=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),r=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));c=Promise.all(l.map(t=>{if(t=p(t),t in u)return;u[t]=!0;const s=t.endsWith(".css"),a=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${a}`))return;const n=document.createElement("link");if(n.rel=s?"stylesheet":f,s||(n.as="script",n.crossOrigin=""),n.href=t,r&&n.setAttribute("nonce",r),document.head.appendChild(n),s)return new Promise((d,m)=>{n.addEventListener("load",d),n.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${t}`)))})}))}return c.then(()=>o()).catch(e=>{const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=e,window.dispatchEvent(r),!r.defaultPrevented)throw e})};export{E as _};
